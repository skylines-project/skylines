services:
  tms:
    origin: 'nw'
  wms:
    srs: ['EPSG:3857']
    image_formats: ['image/png']
    md:
      title: SkyLines WMS Server

layers:
  - name: mwp
    title: Mountain Wave Project WMS
    sources: [mwp_cache]

  - name: airspace+airports
    title: Airspace and Airports WMS
    sources: [airspace_airports_cache]

  - name: airspace
    title: Airspace WMS
    sources: [airspace_cache]

  - name: osm
    title: OpenStreetMap Tiles
    sources: [osm_cache]

caches:
  airspace_airports_cache:
    grids: [GLOBAL_MERCATOR]
    # choose between airspace_mapserver_bin source and
    # airspace_mapserver_wms source. The first one just
    # needs the cgi-mapserver binary, the latter retrieves
    # the map from a WMS server.
    sources: [airspace_cache, airports_cache]
    image:
      format: image/png
    format: image/png
    request_format: image/png
    link_single_color_images: true

  mwp_cache:
    grids: [GLOBAL_MERCATOR]
    # choose between airspace_mapserver_bin source and
    # airspace_mapserver_wms source. The first one just
    # needs the cgi-mapserver binary, the latter retrieves
    # the map from a WMS server.
    sources: [mwp_mapserver_wms]
    image:
      format: image/png
    format: image/png
    request_format: image/png
    link_single_color_images: true

  airports_cache:
    grids: [GLOBAL_MERCATOR]
    # choose between airspace_airports_mapserver_bin source and
    # airspace_airports_mapserver_wms source. The first one just
    # needs the cgi-mapserver binary, the latter retrieves
    # the map from a WMS server.
    sources: [airports_mapserver_wms]
    image:
      format: image/png
    format: image/png
    request_format: image/png
    link_single_color_images: true

  airspace_cache:
    grids: [GLOBAL_MERCATOR]
    # choose between airspace_mapserver_bin source and
    # airspace_mapserver_wms source. The first one just
    # needs the cgi-mapserver binary, the latter retrieves
    # the map from a WMS server.
    sources: [airspace_mapserver_wms]
    image:
      format: image/png
    format: image/png
    request_format: image/png
    link_single_color_images: true

  osm_cache:
    sources: [osm_tiles]
    format: image/png

sources:
  mwp_mapserver_bin:
    type: mapserver
    supported_srs: ['EPSG:3857']
    req:
      layers: MWP
      map: ../skylines.map
      transparent: true
    image:
      format: image/png
    mapserver:
      binary: /usr/lib/cgi-bin/mapserv
      working_dir: ../

  airports_mapserver_bin:
    type: mapserver
    supported_srs: ['EPSG:3857']
    req:
      layers: Airports
      map: ../skylines.map
      transparent: true
    image:
      format: image/png
    mapserver:
      binary: /usr/lib/cgi-bin/mapserv
      working_dir: ../

  airspace_mapserver_bin:
    type: mapserver
    supported_srs: ['EPSG:3857']
    req:
      layers: Airspace
      map: ../skylines.map
      transparent: true
    image:
      format: image/png
    mapserver:
      binary: /usr/lib/cgi-bin/mapserv
      working_dir: ../

  mwp_mapserver_wms:
    type: wms
    supported_srs: ['EPSG:3857']
    req:
      layers: MWP
      url: http://www.skylines-project.org/mapserver/?
      transparent: true
    image:
      format: image/png

  airports_mapserver_wms:
    type: wms
    supported_srs: ['EPSG:3857']
    req:
      layers: Airports
      url: http://www.skylines-project.org/mapserver/?
      transparent: true
    image:
      format: image/png

  airspace_mapserver_wms:
    type: wms
    supported_srs: ['EPSG:3857']
    req:
      layers: Airspace
      url: http://www.skylines-project.org/mapserver/?
      transparent: true
    image:
      format: image/png

  osm_tiles:
    type: tile
    url: http://c.tile.openstreetmap.org/%(tms_path)s.%(format)s
    grid: osm_grid

grids:
  osm_grid:
    srs: EPSG:3857
    origin: nw

globals:
  # # coordinate transformation options
  # srs:
  #   # WMS 1.3.0 requires all coordiates in the correct axis order,
  #   # i.e. lon/lat or lat/lon. Use the following settings to
  #   # explicitly set a CRS to either North/East or East/North
  #   # ordering.
  #   axis_order_ne: ['EPSG:9999', 'EPSG:9998']
  #   axis_order_en: ['EPSG:0000', 'EPSG:0001']
  #   # you can set the proj4 data dir here, if you need custom
  #   # epsg definitions. the path must contain a file named 'epsg'
  #   # the format of the file is:
  #   # <4326> +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs  <>
  #   proj_data_dir: '/path to dir that contains epsg file'

  # # cache options
  cache:
    # where to store the cached images
    base_dir: '/tmp/cache_data'
    # where to store lockfiles
    lock_dir: '/tmp/cache_data/locks'
    # request x*y tiles in one step
    meta_size: [6, 6]
    # add a buffer on all sides (in pixel) when requesting
    # new images
    meta_buffer: 128


  # image/transformation options
  image:
    paletted: false
    resampling_method: bicubic

    formats:
      image/png:
        colors: 256
        transparent: true
        encoding_options:
          quantizer: mediancut

      # resampling_method: bilinear
      # resampling_method: bicubic
  #     jpeg_quality: 90
  #     # stretch cached images by this factor before
  #     # using the next level
  #     stretch_factor: 1.15
  #     # shrink cached images up to this factor before
  #     # returning an empty image (for the first level)
  #     max_shrink_factor: 4.0

  tiles:
    expires_hours: 48
